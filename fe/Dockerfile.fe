# file: fe/Dockerfile.fe

# Stage 1: Build stage
FROM node:18.16.0-alpine3.18 AS builder
WORKDIR /app

# Copy package files to the container for npm install
COPY package.json ./
COPY package-lock.json ./

# RUN npm ci --only=production

# Install webpack, webpack-cli, and babel-loader as development dependencies
# Install npm packages based on the package.json file
RUN npm install --verbose > npm-install.log 2>&1

# Check for errors in the log file
RUN if grep -q 'error' npm-install.log; then \
    echo "npm install failed. Check npm-install.log for details." \
    && cat npm-install.log \
    && exit 1; \
    else \
    echo "npm install succeeded."; \
    fi
#RUN npm install --pure-lockfile



# Copy the entire application to the /app directory in the container
COPY . .
# Build the application using npm run build
RUN npm run build --verbose
# Check if the build was successful by verifying the existence of index.html
RUN ls -la /app/dist && test -e /app/dist/index.html


# Stage 2: Production stage
FROM nginx:1.24.0-alpine

# Copy built assets from the builder stage
#COPY --chown=nginx:nginx --from=builder /app/build /usr/share/nginx/html

# test
# Copy the built assets from the builder stage (/app/build) to Nginx's HTML directory (/usr/share/nginx/html)
WORKDIR /usr/share/nginx/html
RUN rm -rf ./*
COPY --from=builder /app/dist .
COPY --from=builder /app/dist /usr/share/nginx/html
CMD ["nginx", "-g", "daemon off;"]
