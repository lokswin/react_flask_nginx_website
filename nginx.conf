# file: nginx.conf

# Set the user for running the Nginx process. In this case, it's set to 'nginx'.
user nginx;

# Configure the number of worker processes to be used by Nginx. Here, it is set to 1.
worker_processes 1;

# Define the location of the error log file and set the logging level to 'warn'.
error_log /var/log/nginx/error.log warn;

# Specify the file path for the process ID (pid) of the Nginx master process.
pid /var/run/nginx.pid;

# Configure the 'events' block to define parameters related to connection handling.
events {
  # Set the maximum number of connections that each worker process can handle.
  worker_connections 1024;
}

# Define the HTTP server configuration block.
http {
  # Set the default MIME type for responses that do not explicitly specify a type.
  default_type application/octet-stream;

  # Define the log format for HTTP requests.
  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                '$status $body_bytes_sent "$http_referer" '
                '"$http_user_agent" "$http_x_forwarded_for"';

  # Specify the location and format of the access log.
  access_log /var/log/nginx/access.log main;

  # Enable or disable sending files with the 'sendfile' directive.
  sendfile on;

  # Set the timeout for keeping alive idle connections.
  keepalive_timeout 65;

  # Define the server block for handling HTTP requests.
  server {
    # Listen on port 80.
    listen 80;

    # Specify the server name (domain) for this server block.
    server_name localhost;
    

    # Configure the location block for handling requests.
    location / {
      root /var/www/html/react-fe/static;
      # It first tries to serve the requested file ($uri).
      # If the file is not found, it then tries to serve a dir ($uri/).
      # If neither the file nor the dir exists, it finally serves the index.html
      try_files $uri $uri/ /index.html;
    }
    
    location = /maintenance.html {
      root /var/www/html/react-fe/static/maintenance;
      internal;
    }
    # Configure a location block for proxying requests to an API.
    location /api {
      # Proxy requests to the specified backend server (in this case, http://localhost:8000).
      proxy_pass http://be:8000;
      error_page 502 = /maintenance.html;
    }
  }
}
